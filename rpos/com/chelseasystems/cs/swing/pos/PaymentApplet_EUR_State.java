/**
 * <p>Title:PaymentApplet_State </p>
 * <p>Description: State Transaction Payment Applet </p>
 * <p>Copyright: Copyright (c) 2005</p>
 * <p>Company: SkillNet Inc</p>
 * @author Retek
 * @version 1.0
 *
 * formatted with JxBeauty (c) johann.langhofer@nextra.at
 */
/*
 History:
 +------+------------+-----------+-----------+----------------------------------------------------+
 | Ver# | Date       | By        | Defect #  | Description                                        |
 +------+------------+-----------+-----------+----------------------------------------------------+
 | 1    | N/A        | N/A       | N/A       | Base Version                                       |
 +------+------------+-----------+-----------+----------------------------------------------------+
 | 2    | 08-10-2005 | KS        | N/A       | POS_104665_TS_PostTransaction_Rev5.doc                 |
 +------+------------+-----------+-----------+----------------------------------------------------+
 */

package com.chelseasystems.cs.swing.pos;

import com.chelseasystems.cr.appmgr.*;
import com.chelseasystems.cr.appmgr.state.*;
import com.chelseasystems.cr.paidout.PaidOutTransaction;
import com.chelseasystems.cr.collection.CollectionTransaction;
import com.chelseasystems.cr.pos.*;

/**
 * Comments generated by AppBuilder. Do not modify.
 * 0. com.chelseasystems.cs.swing.login.InitialLoginApplet
 * 1. com.chelseasystems.cs.swing.pos.InitialSaleApplet
 * 2. com.chelseasystems.cs.swing.menu.PosMenuApplet
 */
public class PaymentApplet_EUR_State {

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int CANCEL(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int CANCEL_TXN(IApplicationManager theAppMgr) throws StateException {
		if (theAppMgr.getStateObject("CASHIER_SESSION") != null)
			return 2;
		theAppMgr.goHome();
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int DEL_PAY(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int MAN_OVERRIDE(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int OK(IApplicationManager theAppMgr) throws StateException {
		if (theAppMgr.getStateObject("CASHIER_SESSION") != null)
			return 2;
		theAppMgr.goHome();
		return -1;
	}

	/**
	 * Do not actually go anywhere with this button. The applet should
	 * call IApplicationManager.goHome() if posting is successful.
	 */
	public int POST_TXN(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * For Europe. Prints Fiscal Receipts
	 * @param theAppMgr IApplicationManager
	 * @throws StateException
	 * @return int
	 */
	public int PRINT_FISCAL_RECEIPT(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 *
	 * @param theAppMgr IApplicationManager
	 * @throws StateException
	 * @return int
	 */
	public int PRINT_DUPLICATE_FISCAL_RECEIPT(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * Goto previous screen
	 */
	public int PREV(IApplicationManager theAppMgr) throws StateException {
		// always return to the previous screen
		if (theAppMgr.getStateObject("POST_COMPLETE") != null) {
			return -1;
		}
		Object txn = theAppMgr.getStateObject("TXN_POS");
		if (txn instanceof CollectionTransaction)
			return 5;
		if (txn instanceof PaidOutTransaction)
			return 6;
		return 4;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int PRINT_GIFT(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int PRINT_RECEIPT(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int PRINT_STUB(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int PRINT_ALL_GIFT(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int PRINT_SELECT_ITEMS(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int RETURN_TO_PAYMENTS(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int CUST_SALE_HIDDEN(IApplicationManager theAppMgr) throws StateException {
		theAppMgr.addStateObject("ARM_DIRECTED_FROM", "PAYMENT_APPLET");
		theAppMgr.addStateObject("ARM_DIRECT_TO", "PAYMENT_APPLET");
		theAppMgr.addStateObject("ARM_CUST_REQUIRED", "TRUE");
		return 3;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int INITIALSALE_HIDDEN(IApplicationManager theAppMgr) throws StateException {
		return 1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int CREDIT_MEMO(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int GIFT_CERT(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int CREDIT_CARD(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int CHECK(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int CREDIT_MEMO_ISSUE(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int JPY_CASH(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int MFR_COUPON(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int STORE_VALUE_CARD(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int DDT(IApplicationManager theAppMgr) throws StateException {
		theAppMgr.addStateObject("ARM_PRINT_FISCAL_MODE", new Integer(PrintFiscalDocumentApplet.MODE_DDT));
		return 8;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int TAX_FREE(IApplicationManager theAppMgr) throws StateException {
		theAppMgr.addStateObject("ARM_PRINT_FISCAL_MODE", new Integer(PrintFiscalDocumentApplet.MODE_TAX_FREE));
		return 8;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int VAT_INVOICE(IApplicationManager theAppMgr) throws StateException {
		theAppMgr.addStateObject("ARM_PRINT_FISCAL_MODE", new Integer(PrintFiscalDocumentApplet.MODE_VAT_INVOICE));
		return 8;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int CREDIT_NOTE(IApplicationManager theAppMgr) throws StateException {
		theAppMgr.addStateObject("ARM_PRINT_FISCAL_MODE", new Integer(PrintFiscalDocumentApplet.MODE_CREDIT_NOTE));
		return 8;
	}

	public int NEW_TRANSACTION(IApplicationManager theAppMgr) throws StateException {
		return 9;
	}
}

/*
 History:
 +------+------------+-----------+-----------+----------------------------------------------------+
 | Ver# | Date       | By        | Defect #  | Description                                        |
 +------+------------+-----------+-----------+----------------------------------------------------+
 | 1    | 04/19/2005 | OK_COLLECTIONSAnand     | N/A       | To accomodate Armani specific flow                 |
 --------------------------------------------------------------------------------------------------
 *
 * formatted with JxBeauty (c) johann.langhofer@nextra.at
 */


package com.chelseasystems.cs.swing.collections;

import com.chelseasystems.cr.appmgr.*;
import com.chelseasystems.cr.appmgr.state.*;
import com.chelseasystems.cr.swing.CMSApplet;
import com.chelseasystems.cs.collection.CMSMiscCollection;
import com.chelseasystems.cs.customer.CMSCustomer;


/**
 * Comments generated by AppBuilder. Do not modify.
 * 0. com.chelseasystems.cs.swing.pos.PaymentApplet
 */
public class CollectionsApplet_State {

  /**
   * put your documentation comment here
   * @param theAppMgr
   * @return
   * @exception StateException
   */
  public int CANCEL(IApplicationManager theAppMgr)
      throws StateException {
    theAppMgr.goHome();
    return -1;
  }

  /**
   * put your documentation comment here
   * @param theAppMgr
   * @return
   * @exception StateException
   */
  public int OK_COLLECTIONS(IApplicationManager theAppMgr)
      throws StateException {
    //'OK' modified to OK_COLLECTIONS
    //        CMSMiscCollection txn = null;
    //        CMSCustomer txnCust = (CMSCustomer)theAppMgr.getStateObject("TXN_CUSTOMER");
    //        if(theAppMgr.getStateObject("TXN_POS") instanceof CMSMiscCollection)
    //        txn = (CMSMiscCollection)theAppMgr.getStateObject("TXN_POS");
    //        String sType = txn.getType();
    //        if (!sType.equals("MISC_PAID_IN") && txnCust == null){
    //          theAppMgr.showErrorDlg(CMSApplet.res.getString("Please select a customer to continue"));
    //           return -1;
    //        }
    theAppMgr.removeStateObject("REASON_CODE");
    theAppMgr.removeStateObject("CUSTOMER_ASIS");
    return 0;
  }

  /**
   * put your documentation comment here
   * @param theAppMgr
   * @return
   * @exception StateException
   */
  public int PREV(IApplicationManager theAppMgr)
      throws StateException {
    //theAppMgr.goBack();
    theAppMgr.removeStateObject("REASON_CODE");
    theAppMgr.removeStateObject("CUSTOMER_ASIS");
    return 2;
  }

  /**
   * put your documentation comment here
   * @param theAppMgr
   * @return
   * @exception StateException
   */
  public int ACCOUNT_LOOKUP(IApplicationManager theAppMgr)
      throws StateException {
    theAppMgr.addStateObject("ARM_DIRECT_TO", "COLLECTIONS_APPLET");
    theAppMgr.addStateObject("ARM_DIRECTED_FROM", "COLLECTIONS_APPLET");
    theAppMgr.addStateObject("ARM_CUST_REQUIRED", "FALSE");
    return 1;
  }

  /**
   * put your documentation comment here
   * @param theAppMgr
   * @return
   * @exception StateException
   */
  public int CUST_LOOKUP(IApplicationManager theAppMgr)
      throws StateException {
    // added by Anand to make sure that cust_lookup buttonevent always directs to paymentApplet through the cust lookup applet
    theAppMgr.addStateObject("ARM_DIRECT_TO", "CUSTOMER_LOOKUP");
    theAppMgr.addStateObject("ARM_DIRECTED_FROM", "COLLECTIONS_APPLET");
    theAppMgr.addStateObject("ARM_CUST_REQUIRED", "TRUE");
    return 1;
  }

  /**
   * put your documentation comment here
   * @param theAppMgr
   * @return
   * @exception StateException
   */
  public int ADD_CUSTOMER(IApplicationManager theAppMgr)
      throws StateException {
    // added by Anand. add customer and then direct to PaymentApplet.
    theAppMgr.fireButtonEvent("CUST_LOOKUP");
    return -1;
  }

  /**
   * put your documentation comment here
   * @param theAppMgr
   * @return
   * @exception StateException
   */
  public int ADD_ASIS(IApplicationManager theAppMgr)
      throws StateException {
    return 3;
  }
}


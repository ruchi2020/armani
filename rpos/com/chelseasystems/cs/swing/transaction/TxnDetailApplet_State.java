/*
 * put your module comment here
 * formatted with JxBeauty (c) johann.langhofer@nextra.at
 */
//
// Copyright 1999-2001, Chelsea Market Systems
//
/*
 History:
 +------+------------+-----------+-----------+----------------------------------------------+
 | Ver# | Date       | By        | Defect #  | Description                                  |
 +------+------------+-----------+-----------+----------------------------------------------+
 | 3    | 05-10-2005 | Anand     | N/A       |2. Modifications as per specifications for    |
 |      |            |           |           |   Txn History                                |
 -------------------------------------------------------------------------------------------|
 | 2    | 02-10-2005 | Anand     | N/A       |1.Modification to add functionality to new    |
 |      |            |           |           |  menu                                        |
 --------------------------------------------------------------------------------------------
 */


package com.chelseasystems.cs.swing.transaction;

import com.chelseasystems.cr.appmgr.*;
import com.chelseasystems.cr.appmgr.state.*;
import com.chelseasystems.cr.swing.CMSApplet;
import com.chelseasystems.cs.swing.pos.PrintFiscalDocumentApplet;
import com.chelseasystems.cs.util.Version;
import com.chelseasystems.cr.pos.PaymentTransaction;
import  com.chelseasystems.cs.loyalty.LoyaltyHistory;
import  com.chelseasystems.cs.pos.CMSTransactionHeader;


/**
 * Comments generated by AppBuilder. Do not modify.
 * 0. com.chelseasystems.cs.swing.transaction.ViewTxnApplet
 * 1. <code>null</code>
 * 2. com.chelseasystems.cs.swing.pos.ShippingHeaderApplet
 */
public class TxnDetailApplet_State {

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int CANCEL(IApplicationManager theAppMgr) throws StateException {
		clearStateObjects(theAppMgr);
		if (theAppMgr.getStateObject("UPDATE_TXN") != null 
				|| theAppMgr.getStateObject("UPDATE_TXN_CUSTOMER") != null 
				|| theAppMgr.getStateObject("UPDATE_TXN_ASSOCIATE") != null) {
			if (theAppMgr.getStateObject("UPDATE_TXN_CONSULTANT") != null) {
				theAppMgr.removeStateObject("UPDATE_TXN_CONSULTANT");
			} else if (theAppMgr.getStateObject("UPDATE_TXN") != null) {
				theAppMgr.removeStateObject("UPDATE_TXN");
			}
			return -1;
		}
		// Return to CustomerManagementApplet
		if (theAppMgr.getStateObject("CUSTOMER_LOOKUP") != null) {
			return 9;
		}
		if (theAppMgr.getGlobalObject("EOD_COMPLETE") != null) {
			theAppMgr.removeStateObject("THE_TXN");
			theAppMgr.removeStateObject("TXN_CUSTOMER");
			return 0;
		}
		if (theAppMgr.getStateObject("OPERATOR") == null) {
			theAppMgr.goHome();
			return -1;
		}
		return 5;
	}

	/**
	 * put your documentation comment here
	 * 
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int PREV(IApplicationManager theAppMgr) throws StateException {
		// Return to CustomerManagementApplet
		CMSTransactionHeader[] headers;
		LoyaltyHistory[] loyaltyHistoryArray;
		headers = (CMSTransactionHeader[]) theAppMgr.getStateObject("TXN_HEADER_LIST");
		loyaltyHistoryArray = (LoyaltyHistory[]) theAppMgr.getStateObject("LOYALTY_HIST_LIST");
		if (theAppMgr.getStateObject("CUSTOMER_LOOKUP") != null) {
			return 9;
		}
		if (theAppMgr.getStateObject("THE_TXN") != null && theAppMgr.getStateObject("DEPOSIT_DETAILS") != null) {
			theAppMgr.removeStateObject("DEPOSIT_DETAILS");
			theAppMgr.removeStateObject("THE_TXN");
			theAppMgr.removeStateObject("TXN_CUSTOMER");
			return 8;
		}
		if (theAppMgr.getStateObject("THE_TXN") != null && theAppMgr.getStateObject("CREDIT_DETAILS") != null) {
			theAppMgr.removeStateObject("CREDIT_DETAILS");
			theAppMgr.removeStateObject("THE_TXN");
			theAppMgr.removeStateObject("TXN_CUSTOMER");
			return 15;
		}
		if (theAppMgr.getGlobalObject("EOD_COMPLETE") != null) {
			theAppMgr.removeStateObject("THE_TXN");
			theAppMgr.removeStateObject("TXN_CUSTOMER");
			return 4;
		}
		if (theAppMgr.getStateObject("ARM_PRINT_FISCAL_MODE") != null) {
			theAppMgr.removeStateObject("ARM_PRINT_FISCAL_MODE");
			return -1;
		} else {
			if (headers != null)
				theAppMgr.addStateObject("ARM_TXN_HEADERS", headers);
			else if (loyaltyHistoryArray != null)
				theAppMgr.addStateObject("LOYALTY_HIST_LIST", loyaltyHistoryArray);
			return 0;
		}
	}

	/**
	 * put your documentation comment here
	 * 
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int NEXT_TXN(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int OK(IApplicationManager theAppMgr) throws StateException {
		//throw new StateException("State change not implemented->OK");
		return CANCEL(theAppMgr);
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int PREV_DETAIL(IApplicationManager theAppMgr) throws StateException {
		if (theAppMgr.getStateObject("THE_TXN") != null && theAppMgr.getStateObject("DEPOSIT_DETAILS") != null) {
			theAppMgr.removeStateObject("DEPOSIT_DETAILS");
			theAppMgr.removeStateObject("THE_TXN");
			theAppMgr.removeStateObject("TXN_CUSTOMER");
			return 8;
		}
		if (theAppMgr.getStateObject("THE_TXN") != null && theAppMgr.getStateObject("CREDIT_DETAILS") != null) {
			theAppMgr.removeStateObject("CREDIT_DETAILS");
			theAppMgr.removeStateObject("THE_TXN");
			theAppMgr.removeStateObject("TXN_CUSTOMER");
			return 11;
		}

		CMSTransactionHeader[] headers;
		LoyaltyHistory[] loyaltyHistoryArray;
		headers = (CMSTransactionHeader[]) theAppMgr.getStateObject("TXN_HEADER_LIST");
		loyaltyHistoryArray = (LoyaltyHistory[]) theAppMgr.getStateObject("LOYALTY_HIST_LIST");
		if (headers != null)
			theAppMgr.addStateObject("ARM_TXN_HEADERS", headers);
		else if (loyaltyHistoryArray != null)
			theAppMgr.addStateObject("LOYALTY_HIST_LIST", loyaltyHistoryArray);
		return 0;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int PREV_TXN(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int TOGGLE_DETAIL(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int SHIPPING(IApplicationManager theAppMgr) throws StateException {
		return 2;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int SEND_SALE_DETAILS(IApplicationManager theAppMgr) throws StateException {
		return 2;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int PRINT_FISCAL(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	public int DDT(IApplicationManager theAppMgr) throws StateException {
		theAppMgr.addStateObject("ARM_PRINT_FISCAL_MODE", new Integer(PrintFiscalDocumentApplet.MODE_DDT));
		return 6;
	}

	public int TAX_FREE(IApplicationManager theAppMgr) throws StateException {
		theAppMgr.addStateObject("ARM_PRINT_FISCAL_MODE", new Integer(PrintFiscalDocumentApplet.MODE_TAX_FREE));
		return 6;
	}

	public int VAT_INVOICE(IApplicationManager theAppMgr) throws StateException {
		theAppMgr.addStateObject("ARM_PRINT_FISCAL_MODE", new Integer(PrintFiscalDocumentApplet.MODE_VAT_INVOICE));
		return 6;
	}

	public int CREDIT_NOTE(IApplicationManager theAppMgr) throws StateException {
		theAppMgr.addStateObject("ARM_PRINT_FISCAL_MODE", new Integer(PrintFiscalDocumentApplet.MODE_CREDIT_NOTE));
		return 6;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int ITEM_DETAILS(IApplicationManager theAppMgr) throws StateException {
		if (CMSApplet.theAppMgr.getStateObject("InitialSale_POSLineItem") == null) {
			return -1;
		}
		return 3;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int PRINT_GIFT(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int PRINT_ALL_GIFT(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int PRINT_SELECT_ITEMS(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * 
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int SEND_SALE(IApplicationManager theAppMgr) throws StateException {
		theAppMgr.addStateObject("ADD_FROM_INQUIRY", "ADD_FROM_INQUIRY");
		return 13;
	}

	/**
	 * put your documentation comment here
	 * 
	 * @param theAppMgr
	 */
	private void clearStateObjects(IApplicationManager theAppMgr) {
		theAppMgr.removeStateObject("TXN_HEADER_ROW");
		theAppMgr.removeStateObject("TXN_HEADER_LIST");
		theAppMgr.removeStateObject("ARM_TXN_HEADERS");
		theAppMgr.removeStateObject("TITLE_STRING");
		theAppMgr.removeStateObject("DATE_STRING");
		theAppMgr.removeStateObject("TXN_HIST_SORTCOLUMN");
		theAppMgr.removeStateObject("TXN_HIST_SELECTEDTXNID");
		theAppMgr.removeStateObject("UPDATE_TXN_CUSTOMER_LAST");
		theAppMgr.removeStateObject("UPDATE_TXN_CONSULTANT");
		theAppMgr.removeStateObject("UPDATED_CONSULTANTS");
	}

	/**
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int UPDATE_TXN_DATA(IApplicationManager theAppMgr) throws StateException {
		theAppMgr.addStateObject("UPDATE_TXN", new Boolean(true));
		return -1;
	}

	/**
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int CHANGE_ASSOCIATE(IApplicationManager theAppMgr) throws StateException {
		theAppMgr.addStateObject("UPDATE_TXN_ASSOCIATE", new Boolean(true));
		return 10;
	}

	/**
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int CHANGE_CUSTOMER(IApplicationManager theAppMgr) throws StateException {
	    theAppMgr.addStateObject("ARM_DIRECTED_FROM", "TXN_DETAIL_APPLET");
		theAppMgr.addStateObject("UPDATE_TXN_CUSTOMER", new Boolean(true));
		theAppMgr.addStateObject("ARM_CUST_REQUIRED", new Boolean(true));
		if (("EUR".equalsIgnoreCase(Version.CURRENT_REGION))
				//Added by Vivek Mishra for Japan's PCR : Delayed Customer Association
				||("JP".equalsIgnoreCase(Version.CURRENT_REGION))) 
		        //End
		{
			return 11;
		}else{
			return 10;
		}
		
	
	}

	/**
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int UPDATE_ITEM_DETAIL(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int CHANGE_LINE_CONS(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * 
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int RESTORE_CONS(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * 
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int RETURN_TRANS(IApplicationManager theAppMgr) throws StateException {
		return -1;
	}

	/**
	 * put your documentation comment here
	 * 
	 * @param theAppMgr
	 * @return
	 * @exception StateException
	 */
	public int ASIS_INFORMATION(IApplicationManager theAppMgr) throws StateException {

		theAppMgr.addStateObject("FROM_TXN_DETAIL_APPLET", "FROM_TXN_DETAIL_APPLET");
		return 14;
	}
}
